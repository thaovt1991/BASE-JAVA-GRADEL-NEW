image:
  name: docker/compose:1.29.2
  entrypoint: [""]

services:
  - docker:dind

cache:
  paths:
    - .gradle

variables:
  GRADLE_USER_HOME: /cache/.gradle
  DOCKER_REGISTRY: 806209757177.dkr.ecr.ap-northeast-1.amazonaws.com
  AWS_DEFAULT_REGION: ap-northeast-1
  APP_NAME: odpj-api-admin

stages:
  - build
  - package
  - deploy

before_script:
  - apk add --no-cache curl jq python3 py3-pip
  - pip install awscli
  - export API_SERVICE_IMAGE=$DOCKER_REGISTRY/$APP_NAME:api-service
  - export NGINX_IMAGE=$DOCKER_REGISTRY/$APP_NAME:nginx
  - apk add --no-cache openssh-client bash
  - chmod +x ./setup_env.sh
  - bash ./setup_env.sh

gradle-build-only:
  image: gradle:jdk17-alpine
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  artifacts:
    when: always
    expire_in: 1 hour
    paths:
      - build/libs/*.jar
  script:
    - ./gradlew bootJar --no-daemon

docker-build:
  stage: package
  image: public.ecr.aws/docker/library/docker:latest
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
  script:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker-compose -f docker-compose.ci.yml build
    - docker push $DOCKER_REGISTRY/$APP_NAME:api-service

# push_artifact:
#   stage: push_artifact
#   rules:
#     - if: '$CI_COMMIT_REF_PROTECTED == "true"'
#   script:
#     - docker push $DOCKER_REGISTRY/$APP_NAME:api-service

deploy:
  stage: deploy    
  script:
    - mkdir -p ~/.ssh
    - echo "$PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
    - chmod +x ./deploy.sh
    - scp -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.yml ec2-user@$EC2_PUBLIC_IP_ADDRESS:/home/ec2-user/okasan/backend/$APP_NAME
    - bash ./deploy.sh
  only:
    - develop

   